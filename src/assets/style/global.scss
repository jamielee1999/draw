$spacing: 4px;
$size: 2px;

// 定義 mixin 用於生成 margin/padding 樣式
@mixin generate-space($property, $multiplier) {
  @for $i from 0 through 15 {
    &-#{$i} {
      #{$property}: $spacing * $multiplier * $i !important;
    }
  }
  &-auto {
    #{$property}: auto !important;
  }
}

// margin
.mx,
.ms {
  @include generate-space(margin-left, 1);
}

.mx,
.me {
  @include generate-space(margin-right, 1);
}

.my,
.mt {
  @include generate-space(margin-top, 1);
}

.my,
.mb {
  @include generate-space(margin-bottom, 1);
}

.px,
.ps {
  @include generate-space(padding-left, 1);
}

.px,
.pe {
  @include generate-space(padding-right, 1);
}

.py,
.pt {
  @include generate-space(padding-top, 1);
}

.py,
.pb {
  @include generate-space(padding-bottom, 1);
}

.flex {
  display: flex !important;

  &-col {
    flex-direction: column !important;
  }
}

.justify-content {
  &-end {
    justify-content: flex-end !important;
  }

  &-center {
    justify-content: center !important;
  }
  &-start {
    justify-content: flex-start !important;
  }
}

.align {
  &-center {
    align-items: center !important;
  }
}

// font-size
@for $i from 4 through 30 {
  .fs {
    &-#{$i} {
      font-size: $size * $i !important;
    }
  }
}

// font-weight
@for $i from 2 through 9 {
  .fw {
    &-#{$i * 100} {
      font-weight: $i * 100 !important;
    }
  }
}

@for $i from 1 through 10 {
  .w {
    &-#{$i * 10} {
      width: $i * 10% !important;
    }
  }
  .h {
    &-#{$i * 10} {
      height: $i * 10% !important;
    }
  }
}

// position
.relative {
  position: relative !important;
}

.fixed {
  position: fixed !important;
}

.absolute {
  position: absolute !important;
}

.text-center {
  text-align: center !important;
}

.border-0 {
  border: 0 !important;
}
